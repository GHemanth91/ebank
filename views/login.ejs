<!-- File: views/login.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Credexa-Login</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/styles.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(to right, #ff5f6d, #ffc371);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            font-family: 'Segoe UI', sans-serif;
        }

        .form-container {
            max-width: 420px;
            width: 100%;
            border-radius: 15px;
            overflow: hidden;
            background: #fff;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
            animation: fadeIn 0.6s ease-in-out;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(15px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* .bank-header {
            background: #e74c3c;
            color: #fff;
            padding: 30px 20px;
            text-align: center;
        } */

        .bank-logo {
            font-size: 1.8rem;
            font-weight: bold;
            letter-spacing: 1px;
            color: #e74c3c;
        }

        .card-body {
            padding: 10px 20px;
        }

        .btn-primary {
            background-color: #e74c3c;
            border: none;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            background-color: #c0392b;
        }

        .form-check-label {
            font-size: 0.9rem;
        }

        .text-center a {
            color: #e74c3c;
        }

        .text-center a:hover {
            text-decoration: underline;
        }
    </style>
</head>

<body>
    <div class="form-container shadow">
        <div class="bank-header">
            <div class="bank-logo">Credexa</div>
        </div>
        <div class="card-body">
            <form id="loginForm">
                <div class="mb-3">
                    <label for="username" class="form-label">Username or Email</label>
                    <input type="text" class="form-control" id="username" required>
                </div>

                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <input type="password" class="form-control" id="password" required>
                </div>

                <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="rememberMe">
                    <label class="form-check-label" for="rememberMe">Remember me</label>
                </div>

                <div id="loginError" class="alert alert-danger mt-3 d-none"></div>

                <button type="submit" class="btn btn-primary w-100">Log In</button>

                <div class="text-center mt-4">
                    <p><a href="#" class="text-decoration-none">Forgot password?</a></p>
                    <p>Don't have an account? <a href="/register" class="text-decoration-none">Sign up</a></p>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script lang="javascript">
        // Wait for the DOM to be fully loaded
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded, setting up login form handler');

            // Get the login form element
            const loginForm = document.getElementById('loginForm');
            console.log('Login form element:', loginForm);

            // Get the error message element
            const loginError = document.getElementById('loginError');

            // Add submit event listener to the login form
            loginForm.addEventListener('submit', async function(e) {
                // Prevent the default form submission
                e.preventDefault();
                console.log('Login form submitted');

                // Get form values
                const username = document.getElementById('username').value;
                const password = document.getElementById('password').value;
                const rememberMe = document.getElementById('rememberMe').checked;

                console.log('Username:', username, 'Password length:', password.length);

                // Hide any previous error messages
                loginError.classList.add('d-none');

                try {
                    // Send login request to the server
                    console.log('Sending login request to /auth/login');
                    const response = await fetch('/auth/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ username, password })
                    });

                    console.log('Login response status:', response.status);
                    const data = await response.json();
                    console.log('Login response data:', data);

                    if (response.ok) {
                        console.log('Login successful!');

                        // Store tokens in localStorage if remember me is checked, otherwise in sessionStorage
                        const storage = rememberMe ? localStorage : sessionStorage;

                        // Save tokens if they exist in the response
                        if (data.tokens) {
                            storage.setItem('accessToken', data.tokens.accessToken);
                            storage.setItem('refreshToken', data.tokens.refreshToken);

                            // Save user data
                            storage.setItem('user', JSON.stringify(data.user));
                            console.log('Tokens and user data saved to', rememberMe ? 'localStorage' : 'sessionStorage');
                        }

                        // Set a cookie for session authentication
                        document.cookie = `user=${JSON.stringify(data.user)}; path=/`;
                        console.log('User cookie set');

                        // Redirect to dashboard
                        console.log('Redirecting to dashboard...');
                        window.location.href = '/dashboard';
                    } else {
                        // Display error message
                        console.error('Login failed:', data.error);
                        loginError.textContent = data.error || 'Invalid username or password';
                        loginError.classList.remove('d-none');
                    }
                } catch (error) {
                    // Handle any errors that occur during the login process
                    console.error('Login error:', error);
                    loginError.textContent = 'An error occurred during login';
                    loginError.classList.remove('d-none');
                }
            });
        });
    </script>
</body>

</html>
